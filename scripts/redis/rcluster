#!/bin/bash

readonly REDIS_PORT=6379
readonly PORT_OFFSET=100
#readonly REDIS_PORT=6479
#readonly REDIS_CONTAINER="mcaptcha/cache:0.1.1-alpha"
readonly REDIS_CONTAINER="redis"
readonly CONTAINER_BASE_NAME="cluster-playground-"
readonly REDIS_CONFIG_FILE="/tmp/redis.conf"
readonly CLUSTER_DIR="~/workspace/redis/cluster"
get_config() {
cat <<EOF
cluster-enabled yes
cluster-config-file nodes.conf
cluster-node-timeout 5000
appendonly yes
save 1 100
EOF
}

readonly CONFIG_FILE=$(mktemp)

help() {
	cat << EOF
Helper script to launch Redis Cluster

USAGE:
rcluster <command>

COMMANDS:
	-i --init    <number of node> launch nodes
	-d --delete  <number of node> delete nodes
	-c --client  <number of node> launch client
	-h --help                     print this menu
EOF
}

# Pass node # in cluster
get_container_name() {
	echo $CONTAINER_BASE_NAME$1
}


create_config() {
	chmod 777 $CONFIG_FILE
	get_config > $CONFIG_FILE
	cat $CONFIG_FILE
}

get_port() {
	port=$(expr $1 + $PORT_OFFSET + $REDIS_PORT)
	echo $port
}

get_metal_conf() {
cat <<EOF
cluster-enabled yes
cluster-config-file nodes-$1.conf
cluster-node-timeout 5000
appendonly yes
EOF
}




run_metal() {
	cd $CLUSTER_DIR
	for ((i = 1 ; i <= $1 ; i++))
	do
		port=$(get_port $i)
		mkdir $port || true
		get_metal_conf $port > $port/redis.conf
		echo "[*] Launching node $i at port $port"
		redis-server $port/redis.conf \
			 --port $port \
			--loadmodule /usr/lib64/libcache.so  &
#		docker run \
#			--detach \
#			--name=$(get_container_name $i) \
#			--publish $port:$REDIS_PORT \
#			--volume $CONFIG_FILE:$REDIS_CONFIG_FILE \
#			$REDIS_CONTAINER \
#			redis-server $REDIS_CONFIG_FILE
	done

}

run() {
	for ((i = 1 ; i <= $1 ; i++))
	do
		port=$(get_port $i)
		echo "[*] Launching node $i at port $port"
		redis-server $CONFIG_FILE \
			--port $port \
			--loadmodule /usr/lib64/libcache.so  &
#		docker run \
#			--detach \
#			--name=$(get_container_name $i) \
#			--publish $port:$REDIS_PORT \
#			--volume $CONFIG_FILE:$REDIS_CONFIG_FILE \
#			$REDIS_CONTAINER \
#			redis-server $REDIS_CONFIG_FILE
	done
}


client() {
	client="redis-cli --cluster create"
	for ((i = 1 ; i <= $1 ; i++))
	do
		addr="127.0.0.1:$(get_port $i)"
		client="$client $addr"
	done
	client="$client"
	$client
}

del() { 
	for ((i = 1 ; i <= $1 ; i++))
	do
		echo "[*] Deleting node $i"
		docker rm --force  \
		$(get_container_name $i)
	done
}

check_arg(){
	if [ -z $1 ]
	then
		help
		exit 1
	fi
}

match_arg() {

	if [ $1 == $2 ] || [ $1 == $3 ]
	then
		return 0
	else
		return 1
	fi

}

check_arg $1
check_arg $2

if match_arg $1 '-i' '--init'
then
	create_config
	run_metal $2
elif match_arg $1 '-d ' '--delete'
then
	del $2
elif match_arg $1 '-c ' '--client'
then
	client $2
elif match_arg $1 '-h ' '--help'
then
	help
else
	help
fi
